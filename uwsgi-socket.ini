[uwsgi]

project=izone
#uid=www-data
#gid=www-data
base=/opt
# 指定python虚拟环境
#home=%(base)/%(project)/.env

#使用nginx连接时使用
socket=127.0.0.1:8000
#chown-socket=%(uid):www-data
#chmod-socket=664

#直接做web服务器使用 python manage.py runserver ip:port
#http=0.0.0.0:8000
#项目目录
chdir=%(base)/%(project)
#项目中wsgi.py文件的目录，相对于项目目录django 2.0配置此参数
wsgi-file=%(project)/wsgi.py
# django 3.0配置此参数
# module=%(project).wsgi
#指定启动的工作进程数
processes=4
#指定工作进程中的线程数
threads=2
#指定在这些进程里有一个主进程
master=True
#保存启动之后主进程的pid
pidfile=%(chdir)/%(project)-uwsgi.pid
#设置uwsgi后台运行，uwsgi.log保存日志信息
#daemonize=%(chdir)/%(project)-uwsgi.log
#设置日志文件最大字节数
log-maxsize = 100000
#设置每个进程最大请求数
max-requests = 5000
 # 当服务器退出时自动删除unix socket文件和pid文件
vacuum=true
#设置虚拟环境的路径
#virtualenv=/root/anaconda3/envs/myblog

#设置一个请求的超时时间(秒)，如果一个请求超过了这个时间，则请求被丢弃
harakiri = 60
post buffering = 8192
buffer-size= 65535
#当一个请求被harakiri杀掉会，会输出一条日志
harakiri-verbose = true

#开启内存使用情况报告
memory-report = true

#设置平滑的重启（直到处理完接收到的请求）的长等待时间(秒)
reload-mercy = 10